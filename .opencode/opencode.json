{
  "$schema": "https://opencode.ai/config.json",
  "agent": {
    "plan": {
      "description": "Strategic planning with orchestration capabilities",
      "fallback_model": "opencode/zen",
      "temperature": 0.1,
      "tools": {
        "read": true,
        "write": true,
        "edit": true,
        "bash": true,
        "grep": true,
        "glob": true,
        "list": true,
        "mcp": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow",
        "webfetch": "allow",
        "*": "deny"
      },
      "prompt": "@./agents/plan.md",
      "subtasks": ["research", "architect", "build", "todo"]
    },
    "build": {
      "description": "Implementation, testing, review, and version control",
      "model": "openrouter/meta-llama/llama-3.1-8b-instruct:free",
      "fallback_model": "opencode/code-supernova",
      "tools": {
        "read": true,
        "write": true,
        "edit": true,
        "bash": true,
        "grep": true,
        "glob": true,
        "list": true,
        "patch": true,
        "mcp": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow",
        "webfetch": "deny",
        "*": "deny"
      },
      "prompt": "@./agents/build.md",
      "subtasks": ["todo", "edit", "format", "code-reviewer"]
    },
    "research": {
      "description": "Research, general assistance, and fast Q&A",
      "model": "perplexity/sonar-pro",
      "fallback_model": "opencode/zen",
      "temperature": 0.2,
      "tools": {
        "read": true,
        "write": true,
        "edit": true,
        "bash": true,
        "grep": true,
        "glob": true,
        "list": true,
        "webfetch": true,
        "mcp": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow",
        "webfetch": "allow",
        "*": "deny"
      },
      "prompt": "@./agents/research.md",
      "subtasks": ["search", "todo"]
    },
    "creative": {
      "description": "Creative writing and brainstorming agent",
      "model": "openrouter/mistralai/mistral-7b-instruct:free",
      "fallback_model": "opencode/zen",
      "temperature": 0.8,
      "tools": {
        "read": true,
        "write": true
      },
      "permission": {
        "edit": "allow",
        "*": "deny"
      },
      "prompt": "@./agents/creative.md",
      "subtasks": ["todo"]
    }
  },
  "subagent": {
    "specifier": {
      "description": "Constitution and specification authoring",
      "temperature": 0.1,
      "tools": {
        "read": true,
        "write": true,
        "edit": true,
        "grep": true,
        "glob": true,
        "list": true,
        "mcp": true
      },
      "permission": {
        "edit": "allow",
        "bash": "deny",
        "webfetch": "allow"
      },
      "prompt": "@./agents/architect.md"
    },
    "architect": {
      "description": "Architecture review",
      "temperature": 0.1,
      "tools": {
        "read": true,
        "grep": true,
        "glob": true,
        "list": true,
        "mcp": true
      },
      "permission": {
        "edit": "deny",
        "bash": "deny",
        "webfetch": "allow",
        "*": "deny"
      },
      "prompt": "@./agents/architect.md"
    },
    "debug": {
      "description": "Multi-context extension debugging specialist",
      "temperature": 0.1,
      "tools": {
        "read": true,
        "grep": true,
        "glob": true,
        "list": true,
        "bash": true,
        "mcp": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow",
        "webfetch": "deny"
      },
      "prompt": "@./agents/debug.md"
    },
    "documentation": {
      "description": "Documentation generation and maintenance specialist",
      "temperature": 0.1,
      "tools": {
        "read": true,
        "write": true,
        "edit": true,
        "grep": true,
        "glob": true,
        "list": true,
        "mcp": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow",
        "webfetch": "allow"
      },
      "prompt": "@./agents/docs.md"
    },
    "shell-expert": {
      "description": "Shell scripting and command line expertise",
      "temperature": 0.1,
      "tools": {
        "read": true,
        "write": true,
        "edit": true,
        "bash": true,
        "grep": true,
        "glob": true,
        "list": true,
        "mcp": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow",
        "webfetch": "allow"
      },
      "prompt": "@./agents/shell-expert.md"
    },
    "file-editor": {
      "description": "File editing and modification subagent",
      "max-tokens": 800,
      "temperature": 0.6,
      "tools": {
        "read": true,
        "grep": true,
        "glob": true,
        "list": true
      },
      "permission": {
        "edit": "deny",
        "bash": "deny",
        "webfetch": "deny",
        "*": "deny"
      },
      "prompt": "@./subagent/template-subagent.md"
    },
    "code-reviewer": {
      "description": "Reviews code for quality and security",
      "model": "opencode/grok4-fast",
      "max-tokens": 800,
      "temperature": 0.1,
      "tools": {
        "read": true,
        "grep": true,
        "glob": true,
        "list": true
      },
      "permission": {
        "edit": "deny",
        "bash": "deny",
        "webfetch": "deny",
        "*": "deny"
      },
      "prompt": "@./subagent/code-reviewer.md"
    },
    "edit": {
      "description": "File editing subagent",
      "model": "opencode/code-supernova",
      "max-tokens": 800,
      "temperature": 0.1,
      "tools": {
        "read": true,
        "edit": true
      },
      "permission": {
        "edit": "allow",
        "bash": "deny",
        "webfetch": "deny",
        "*": "deny"
      },
      "prompt": "@./subagent/edit.md"
    },
    "search": {
      "description": "Advanced code and file search subagent",
      "model": "openrouter/mistralai/mistral-7b-instruct:free",
      "fallback_model": "opencode/zen",
      "max-tokens": 4000,
      "temperature": 0.1,
      "tools": {
        "read": true,
        "grep": true,
        "glob": true,
        "list": true
      },
      "permission": {
        "edit": "deny",
        "bash": "deny",
        "webfetch": "allow",
        "*": "deny"
      },
      "prompt": "@./subagent/search.md"
    },
    "clean-directory": {
      "description": "Advanced directory cleanup and organization subagent",
      "model": "openrouter/mistralai/mistral-7b-instruct:free",
      "fallback_model": "opencode/zen",
      "max-tokens": 800,
      "temperature": 0.1,
      "tools": {
        "read": true,
        "list": true,
        "bash": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow",
        "webfetch": "deny",
        "*": "deny"
      },
      "prompt": "@./subagent/clean-directory.md"
    },
    "format": {
      "description": "Advanced code formatting subagent",
      "model": "opencode/grok4-fast",
      "max-tokens": 800,
      "temperature": 0.1,
      "tools": {
        "read": true,
        "edit": true,
        "bash": true
      },
      "permission": {
        "edit": "allow",
        "bash": "allow",
        "webfetch": "deny",
        "*": "deny"
      },
      "prompt": "@./subagent/format.md"
    },
    "plan": {
      "description": "Advanced task planning and estimation subagent",
      "model": "opencode/grok4-fast",
      "max-tokens": 1000,
      "temperature": 0.1,
      "tools": {
        "read": true,
        "grep": true,
        "glob": true,
        "list": true
      },
      "permission": {
        "edit": "deny",
        "bash": "deny",
        "webfetch": "allow",
        "*": "deny"
      },
      "prompt": "@./subagent/plan.md"
    },
    "todo": {
      "description": "Advanced task management subagent",
      "model": "opencode/code-supernova",
      "max-tokens": 1000,
      "temperature": 0.1,
      "tools": {
        "read": true,
        "write": true,
        "edit": true
      },
      "permission": {
        "edit": "allow",
        "bash": "deny",
        "webfetch": "deny",
        "*": "deny"
      },
      "prompt": "@./subagent/todo.md"
    },
    "semantic-search": {
      "description": "Semantic search using embeddings",
      "model": "openrouter/openai/text-embedding-3-small",
      "fallback_model": "opencode/zen",
      "max-tokens": 500,
      "temperature": 0.1,
      "tools": {
        "read": true
      },
      "permission": {
        "*": "deny"
      },
      "prompt": "@./subagent/semantic-search.md"
    },
    "result-ranker": {
      "description": "Reranking search results",
      "model": "openrouter/cohere/rerank-english-v2.0",
      "fallback_model": "opencode/code-supernova",
      "max-tokens": 500,
      "temperature": 0.1,
      "tools": {
        "read": true
      },
      "permission": {
        "*": "deny"
      },
      "prompt": "@./subagent/result-ranker.md"
    }
  },
  "mcp": {
    "filesystem": {
      "type": "local",
      "command": ["npx", "-y", "@modelcontextprotocol/server-filesystem", "/Users/lorenzorasmussen"],
      "environment": {},
      "enabled": true
    },
    "memory": {
      "type": "local",
      "command": ["npx", "-y", "@modelcontextprotocol/server-memory"],
      "environment": {},
      "enabled": true
    },
    "github": {
      "type": "remote",
      "url": "https://mcp-github.vercel.app",
      "enabled": true
    },
    "git": {
      "type": "remote",
      "url": "https://mcp-git.vercel.app",
      "enabled": true
    },
    "sqlite": {
      "type": "remote",
      "url": "https://mcp-sqlite.vercel.app",
      "enabled": true
    },
    "notion": {
      "type": "remote",
      "url": "https://notion-mcp.example.com/mcp",
      "enabled": true
    },
    "perplexity": {
      "type": "remote",
      "url": "https://perplexity-mcp.example.com/mcp",
      "enabled": true
    },
    "brave": {
      "type": "remote",
      "url": "https://brave-search-mcp.example.com/mcp",
      "enabled": true
    }
  },
  "command": {
    "research": {
      "description": "Research best practices and solutions",
      "template": "Research $ARGUMENTS",
      "agent": "research",
      "subtask": false
    },
    "plan": {
      "description": "Generate technical plan from spec",
      "template": "Generate plan for $ARGUMENTS",
      "agent": "plan",
      "subtask": false
    },
    "todo": {
      "description": "Create task breakdown from plan",
      "template": "Create tasks for $ARGUMENTS",
      "agent": "plan",
      "subtask": false
    },
    "code-review": {
      "description": "Validate implementation vs spec/constitution",
      "template": "Validate spec for $ARGUMENTS",
      "agent": "reviewer",
      "subtask": true
    },
    "security-scan": {
      "description": "Scan for security vulnerabilities and unsafe patterns",
      "template": "Scan security for $ARGUMENTS",
      "agent": "reviewer",
      "subtask": false
    },
    "build": {
      "description": "Full extension build with all packages",
      "template": "Build extension",
      "agent": "build",
      "subtask": false
    },
    "format": {
      "description": "Format code using Prettier",
      "template": "Format code for $ARGUMENTS",
      "agent": "tests",
      "subtask": false
    },
    "test": {
      "description": "Run unit tests for specific package",
      "template": "Run tests for $ARGUMENTS",
      "agent": "tests",
      "subtask": false
    },
    "update-documentation": {
      "description": "Update documentation (includes API docs, user guides, architecture docs)",
      "template": "Update docs for $ARGUMENTS",
      "agent": "documentation",
      "subtask": false
    },
    "debug": {
      "description": "Debug issues in the extension",
      "template": "Debug $ARGUMENTS",
      "agent": "debug",
      "subtask": false
    },
    "validate-build": {
      "description": "Validate build artifacts for extension",
      "template": "Validate build for $ARGUMENTS",
      "agent": "tests",
      "subtask": false
    },
    "commit": {
      "description": "Analyze changes and create git commit",
      "template": "Commit $ARGUMENTS",
      "agent": "build",
      "subtask": false
    },
    "clean": {
      "description": "Clean up temporary files and optimize workspace",
      "template": "Clean $ARGUMENTS",
      "agent": "build",
      "subtask": false
    },
    "context": {
      "description": "Manage and summarize current context",
      "template": "Context $ARGUMENTS",
      "agent": "research",
      "subtask": false
    },
    "prompter": {
      "description": "Generate optimized prompts for AI tasks",
      "template": "Generate prompt for $ARGUMENTS",
      "agent": "research",
      "subtask": false
    },
    "joker": {
      "description": "Generate fun, random suggestions or jokes",
      "template": "Joker $ARGUMENTS",
      "agent": "research",
      "subtask": false
    }
  }
}
